package test.one;

import java.math.BigInteger;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.concurrent.Callable;
import org.web3j.abi.TypeReference;
import org.web3j.abi.datatypes.Bool;
import org.web3j.abi.datatypes.DynamicArray;
import org.web3j.abi.datatypes.DynamicStruct;
import org.web3j.abi.datatypes.Function;
import org.web3j.abi.datatypes.Type;
import org.web3j.abi.datatypes.Utf8String;
import org.web3j.abi.datatypes.generated.Bytes32;
import org.web3j.abi.datatypes.generated.Int256;
import org.web3j.crypto.Credentials;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.RemoteCall;
import org.web3j.protocol.core.RemoteFunctionCall;
import org.web3j.protocol.core.methods.response.TransactionReceipt;
import org.web3j.tx.Contract;
import org.web3j.tx.TransactionManager;
import org.web3j.tx.gas.ContractGasProvider;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>,
 * or the org.web3j.codegen.SolidityFunctionWrapperGenerator in the 
 * <a href="https://github.com/web3j/web3j/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with web3j version 1.4.1.
 */
@SuppressWarnings("rawtypes")
public class __contracts_Election_sol_Election extends Contract {
    public static final String BINARY = "6080604052600080556001805460ff1916905534801561001e57600080fd5b506133678061002e6000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c80638d25a02f116100a2578063cd2e5bb711610071578063cd2e5bb714610250578063db463d6814610263578063dc20ca4114610284578063e7fbdd5314610297578063ef883707146102aa57600080fd5b80638d25a02f146101ea57806391515238146101fd578063afe2503b1461021d578063bf7cf9271461023057600080fd5b806345e687a9116100de57806345e687a914610191578063517f6117146101b15780635513c9bb146101c4578063772a6a0d146101d757600080fd5b80630f2910dc146101105780631319f305146101395780631343765f1461015c5780632a6a6acb1461017c575b600080fd5b61012361011e36600461286b565b6102bd565b604051610130919061322f565b60405180910390f35b61014c610147366004612902565b61036d565b6040519015158152602001610130565b61016f61016a366004612902565b6105fc565b6040516101309190613100565b61018f61018a366004612989565b610a2a565b005b6101a461019f366004612d43565b610d10565b604051610130919061301e565b61018f6101bf366004612a35565b6111da565b61018f6101d236600461289f565b6112ed565b61018f6101e5366004612b06565b611522565b61018f6101f8366004612bfa565b61156e565b61021061020b36600461286b565b611679565b6040516101309190613242565b61018f61022b36600461289f565b61189d565b61024361023e36600461286b565b611acf565b60405161013091906131cd565b61018f61025e36600461289f565b611dc4565b610276610271366004612a35565b611fea565b604051908152602001610130565b61014c61029236600461286b565b61206f565b61018f6102a536600461289f565b6120ad565b61018f6102b8366004612dd2565b6120dc565b606060006102ca8361223a565b60008181526004602052604090208054919250906102e790613299565b80601f016020809104026020016040519081016040528092919081815260200182805461031390613299565b80156103605780601f1061033557610100808354040283529160200191610360565b820191906000526020600020905b81548152906001019060200180831161034357829003601f168201915b5050505050915050919050565b6000806103798461223a565b905060006103868461223a565b90506000600260008481526020019081526020016000206040518060e00160405290816000820180546103b890613299565b80601f01602080910402602001604051908101604052809291908181526020018280546103e490613299565b80156104315780601f1061040657610100808354040283529160200191610431565b820191906000526020600020905b81548152906001019060200180831161041457829003601f168201915b5050505050815260200160018201805461044a90613299565b80601f016020809104026020016040519081016040528092919081815260200182805461047690613299565b80156104c35780601f10610498576101008083540402835291602001916104c3565b820191906000526020600020905b8154815290600101906020018083116104a657829003601f168201915b505050505081526020016002820180546104dc90613299565b80601f016020809104026020016040519081016040528092919081815260200182805461050890613299565b80156105555780601f1061052a57610100808354040283529160200191610555565b820191906000526020600020905b81548152906001019060200180831161053857829003601f168201915b505050918352505060038201546020820152600482015460408083019190915260059092015460ff808216151560608401526101009091041615156080909101528101519091506000906105a89061223a565b905060006105b58961223a565b905080821480156105c95750848360600151145b80156105d85750838360800151145b156105eb576001955050505050506105f5565b6000955050505050505b9392505050565b606061060984848461036d565b156109b75760006106198461223a565b600081815260056020526040812080549293509190816001600160401b038111156106465761064661331b565b6040519080825280602002602001820160405280156106b757816020015b6106a46040518060e00160405280606081526020016060815260200160608152602001600081526020016060815260200160008152602001600081525090565b8152602001906001900390816106645790505b50905060005b828110156109ab576000818152600180860160209081526040808420548085526006909252832091820180549193916106f590613299565b80601f016020809104026020016040519081016040528092919081815260200182805461072190613299565b801561076e5780601f106107435761010080835404028352916020019161076e565b820191906000526020600020905b81548152906001019060200180831161075157829003601f168201915b50505050509050600082600201805461078690613299565b80601f01602080910402602001604051908101604052809291908181526020018280546107b290613299565b80156107ff5780601f106107d4576101008083540402835291602001916107ff565b820191906000526020600020905b8154815290600101906020018083116107e257829003601f168201915b50505050509050600083600301805461081790613299565b80601f016020809104026020016040519081016040528092919081815260200182805461084390613299565b80156108905780601f1061086557610100808354040283529160200191610890565b820191906000526020600020905b81548152906001019060200180831161087357829003601f168201915b5050505050905060008460040154905060008560050180546108b190613299565b80601f01602080910402602001604051908101604052809291908181526020018280546108dd90613299565b801561092a5780601f106108ff5761010080835404028352916020019161092a565b820191906000526020600020905b81548152906001019060200180831161090d57829003601f168201915b5050505050905060008660060154905060006040518060e001604052808881526020018781526020018681526020018581526020018481526020018381526020018b8152509050808b8b8151811061098457610984613305565b602002602001018190525050505050505050505080806109a3906132d4565b9150506106bd565b5093506105f592505050565b6040805160008082526020820190925281610a20565b610a0d6040518060e00160405280606081526020016060815260200160608152602001600081526020016060815260200160008152602001600081525090565b8152602001906001900390816109cd5790505b5091506105f59050565b6000610a358361223a565b90506000610a428361223a565b90506000600260008481526020019081526020016000206040518060e0016040529081600082018054610a7490613299565b80601f0160208091040260200160405190810160405280929190818152602001828054610aa090613299565b8015610aed5780601f10610ac257610100808354040283529160200191610aed565b820191906000526020600020905b815481529060010190602001808311610ad057829003601f168201915b50505050508152602001600182018054610b0690613299565b80601f0160208091040260200160405190810160405280929190818152602001828054610b3290613299565b8015610b7f5780601f10610b5457610100808354040283529160200191610b7f565b820191906000526020600020905b815481529060010190602001808311610b6257829003601f168201915b50505050508152602001600282018054610b9890613299565b80601f0160208091040260200160405190810160405280929190818152602001828054610bc490613299565b8015610c115780601f10610be657610100808354040283529160200191610c11565b820191906000526020600020905b815481529060010190602001808311610bf457829003601f168201915b50505091835250506003820154602080830191909152600483015460408084019190915260059093015460ff808216151560608501526101009091041615156080928301528a84528381018a9052908301859052600086815260028252919091208251805193945084939192610c8c928492909101906126f0565b506020828101518051610ca592600185019201906126f0565b5060408201518051610cc19160028401916020909101906126f0565b50606082015160038201556080820151600482015560a08201516005909101805460c09093015115156101000261ff00199215159290921661ffff199093169290921717905550505050505050565b6060610d1d85858561036d565b15611166576000610d2d8561223a565b60008181526005602090815260408083208784526001810183528184205480855260069384905291842092830154949550939092816001600160401b03811115610d7957610d7961331b565b604051908082528060200260200182016040528015610de357816020015b610dd06040518060c001604052806060815260200160608152602001606081526020016000815260200160608152602001606081525090565b815260200190600190039081610d975790505b50905060005b82811015611158576000818152600885016020908152604080832054808452600790925282208054919290918290610e2090613299565b80601f0160208091040260200160405190810160405280929190818152602001828054610e4c90613299565b8015610e995780601f10610e6e57610100808354040283529160200191610e99565b820191906000526020600020905b815481529060010190602001808311610e7c57829003601f168201915b505050505090506000826001018054610eb190613299565b80601f0160208091040260200160405190810160405280929190818152602001828054610edd90613299565b8015610f2a5780601f10610eff57610100808354040283529160200191610f2a565b820191906000526020600020905b815481529060010190602001808311610f0d57829003601f168201915b505050505090506000836002018054610f4290613299565b80601f0160208091040260200160405190810160405280929190818152602001828054610f6e90613299565b8015610fbb5780601f10610f9057610100808354040283529160200191610fbb565b820191906000526020600020905b815481529060010190602001808311610f9e57829003601f168201915b505050505090506000846003015490506000856004018054610fdc90613299565b80601f016020809104026020016040519081016040528092919081815260200182805461100890613299565b80156110555780601f1061102a57610100808354040283529160200191611055565b820191906000526020600020905b81548152906001019060200180831161103857829003601f168201915b50505050509050600086600501805461106d90613299565b80601f016020809104026020016040519081016040528092919081815260200182805461109990613299565b80156110e65780601f106110bb576101008083540402835291602001916110e6565b820191906000526020600020905b8154815290600101906020018083116110c957829003601f168201915b5050505050905060006040518060c00160405280888152602001878152602001868152602001858152602001848152602001838152509050808b8b8151811061113157611131613305565b60200260200101819052505050505050505050508080611150906132d4565b915050610de9565b5095506111d2945050505050565b60408051600080825260208201909252816111c8565b6111b56040518060c001604052806060815260200160608152602001606081526020016000815260200160608152602001606081525090565b81526020019060019003908161117c5790505b5091506111d29050565b949350505050565b60015460ff166112e65760006111ef8361223a565b905060006111fc8361223a565b6040805160e08101825289815260208082018a90528183018990526060820186905260808201849052600160a0830152600060c0830181905286815260028252929092208151805194955091938493919261125b9284929101906126f0565b50602082810151805161127492600185019201906126f0565b50604082015180516112909160028401916020909101906126f0565b50606082015160038201556080820151600482015560a08201516005909101805460c09093015115156101000261ff00199215159290921661ffff199093169290921717905550506001805460ff191681179055505b5050505050565b60006112f88261223a565b905060006113058461223a565b90506000600260008481526020019081526020016000206040518060e001604052908160008201805461133790613299565b80601f016020809104026020016040519081016040528092919081815260200182805461136390613299565b80156113b05780601f10611385576101008083540402835291602001916113b0565b820191906000526020600020905b81548152906001019060200180831161139357829003601f168201915b505050505081526020016001820180546113c990613299565b80601f01602080910402602001604051908101604052809291908181526020018280546113f590613299565b80156114425780601f1061141757610100808354040283529160200191611442565b820191906000526020600020905b81548152906001019060200180831161142557829003601f168201915b5050505050815260200160028201805461145b90613299565b80601f016020809104026020016040519081016040528092919081815260200182805461148790613299565b80156114d45780601f106114a9576101008083540402835291602001916114d4565b820191906000526020600020905b8154815290600101906020018083116114b757829003601f168201915b5050509183525050600382015460208201526004820154604082015260059091015460ff80821615156060840152610100909104161515608091820152810183905290506112e681856122af565b60006040518060a001604052808881526020018781526020018681526020018581526020018481525090506115568261206f565b15611565576115658183612365565b50505050505050565b61157989898961036d565b1561166e5760006115898961223a565b905060006115968861223a565b60008181526006602090815260409091208a51929350916115bc918391908c01906126f0565b5087516115d290600183019060208b01906126f0565b5086516115e890600283019060208a01906126f0565b5084516115fe90600383019060208801906126f0565b50855161161490600583019060208901906126f0565b506004810184905560078101805460ff19166001908117909155600084815260056020908152604080832080548085528186019093529083208690558054909391928491611663908490613255565b909155505050505050505b505050505050505050565b611681612774565b600061168c8361223a565b9050600260008281526020019081526020016000206040518060e00160405290816000820180546116bc90613299565b80601f01602080910402602001604051908101604052809291908181526020018280546116e890613299565b80156117355780601f1061170a57610100808354040283529160200191611735565b820191906000526020600020905b81548152906001019060200180831161171857829003601f168201915b5050505050815260200160018201805461174e90613299565b80601f016020809104026020016040519081016040528092919081815260200182805461177a90613299565b80156117c75780601f1061179c576101008083540402835291602001916117c7565b820191906000526020600020905b8154815290600101906020018083116117aa57829003601f168201915b505050505081526020016002820180546117e090613299565b80601f016020809104026020016040519081016040528092919081815260200182805461180c90613299565b80156118595780601f1061182e57610100808354040283529160200191611859565b820191906000526020600020905b81548152906001019060200180831161183c57829003601f168201915b5050509183525050600382015460208201526004820154604082015260059091015460ff808216151560608401526101009091041615156080909101529392505050565b60006118a88261223a565b90506000600260008381526020019081526020016000206040518060e00160405290816000820180546118da90613299565b80601f016020809104026020016040519081016040528092919081815260200182805461190690613299565b80156119535780601f1061192857610100808354040283529160200191611953565b820191906000526020600020905b81548152906001019060200180831161193657829003601f168201915b5050505050815260200160018201805461196c90613299565b80601f016020809104026020016040519081016040528092919081815260200182805461199890613299565b80156119e55780601f106119ba576101008083540402835291602001916119e5565b820191906000526020600020905b8154815290600101906020018083116119c857829003601f168201915b505050505081526020016002820180546119fe90613299565b80601f0160208091040260200160405190810160405280929190818152602001828054611a2a90613299565b8015611a775780601f10611a4c57610100808354040283529160200191611a77565b820191906000526020600020905b815481529060010190602001808311611a5a57829003601f168201915b505050918352505060038201546020808301919091526004830154604083015260059092015460ff8082161515606084015261010090910416151560809091015281018590529050611ac981846122af565b50505050565b6060611ada8261206f565b15611d8b57600080546001600160401b03811115611afa57611afa61331b565b604051908082528060200260200182016040528015611b3357816020015b611b20612774565b815260200190600190039081611b185790505b50905060005b600054811015611d84576000818152600360209081526040808320548352600290915290819020815160e08101909252805482908290611b7890613299565b80601f0160208091040260200160405190810160405280929190818152602001828054611ba490613299565b8015611bf15780601f10611bc657610100808354040283529160200191611bf1565b820191906000526020600020905b815481529060010190602001808311611bd457829003601f168201915b50505050508152602001600182018054611c0a90613299565b80601f0160208091040260200160405190810160405280929190818152602001828054611c3690613299565b8015611c835780601f10611c5857610100808354040283529160200191611c83565b820191906000526020600020905b815481529060010190602001808311611c6657829003601f168201915b50505050508152602001600282018054611c9c90613299565b80601f0160208091040260200160405190810160405280929190818152602001828054611cc890613299565b8015611d155780601f10611cea57610100808354040283529160200191611d15565b820191906000526020600020905b815481529060010190602001808311611cf857829003601f168201915b5050509183525050600382015460208201526004820154604082015260059091015460ff808216151560608401526101009091041615156080909101528251839083908110611d6657611d66613305565b60200260200101819052508080611d7c906132d4565b915050611b39565b5092915050565b6040805160008082526020820190925281611dbc565b611da9612774565b815260200190600190039081611da15790505b509392505050565b6000611dcf8261223a565b90506000600260008381526020019081526020016000206040518060e0016040529081600082018054611e0190613299565b80601f0160208091040260200160405190810160405280929190818152602001828054611e2d90613299565b8015611e7a5780601f10611e4f57610100808354040283529160200191611e7a565b820191906000526020600020905b815481529060010190602001808311611e5d57829003601f168201915b50505050508152602001600182018054611e9390613299565b80601f0160208091040260200160405190810160405280929190818152602001828054611ebf90613299565b8015611f0c5780601f10611ee157610100808354040283529160200191611f0c565b820191906000526020600020905b815481529060010190602001808311611eef57829003601f168201915b50505050508152602001600282018054611f2590613299565b80601f0160208091040260200160405190810160405280929190818152602001828054611f5190613299565b8015611f9e5780601f10611f7357610100808354040283529160200191611f9e565b820191906000526020600020905b815481529060010190602001808311611f8157829003601f168201915b5050509183525050600382015460208201526004820154604082015260059091015460ff808216151560608401526101009091041615156080909101528481529050611ac981846122af565b600080611ff68461223a565b905060006120038461223a565b6040805160e0810182528a8152602081018a90529081018890526060810184905260808101829052600160a0820181905260c0820152909150600061204882886124ad565b9050801561205d5760c8945050505050612066565b60649450505050505b95945050505050565b60008061207b8361223a565b600081815260026020526040902060058101549192509060ff166120a3575060009392505050565b5060019392505050565b60006120b88361223a565b60008181526004602090815260409091208451929350611ac99290918501906126f0565b6120e78b8b8b61036d565b1561222d5760006120f78b61223a565b905060006121048961223a565b9050600060056000848152602001908152602001600020905060008160010160008d8152602001908152602001600020549050600060066000838152602001908152602001600020905060008160060154905060006007600087815260200190815260200160002090508c8160000190805190602001906121869291906126f0565b508b5161219c90600183019060208f01906126f0565b508a516121b290600283019060208e01906126f0565b50600381018a905588516121cf90600483019060208c01906126f0565b5087516121e590600583019060208b01906126f0565b506006808201805460ff1916600190811790915560008481526008860160205260408120899055918501805491929091612220908490613255565b9091555050505050505050505b5050505050505050505050565b600060028260405160200161224f9190613002565b60408051601f198184030181529082905261226991613002565b602060405180830381855afa158015612286573d6000803e3d6000fd5b5050506040513d601f19601f820116820180604052508101906122a99190612852565b92915050565b60006122ba8261223a565b600081815260026020908152604090912085518051939450869391926122e5928492909101906126f0565b5060208281015180516122fe92600185019201906126f0565b506040820151805161231a9160028401916020909101906126f0565b50606082015160038201556080820151600482015560a08201516005909101805460c09093015115156101000261ff00199215159290921661ffff1990931692909217179055505050565b61236e8161206f565b156124a9576000612382836060015161223a565b90506000612393846080015161223a565b6040805160e081018252865181526020808801518183015287830151828401526060820186905260808201849052600160a0830181905260c083015260008681526002825292909220815180519495509193849391926123f79284929101906126f0565b50602082810151805161241092600185019201906126f0565b506040820151805161242c9160028401916020909101906126f0565b5060608201516003808301919091556080830151600483015560a08301516005909201805460c09094015115156101000261ff00199315159390931661ffff1990941693909317919091179091556000805481526020919091526040812084905580546001919081906124a0908490613255565b90915550505050505b5050565b6000806124b98361223a565b60008181526002602052604090208054919250906125649082906124dc90613299565b80601f016020809104026020016040519081016040528092919081815260200182805461250890613299565b80156125555780601f1061252a57610100808354040283529160200191612555565b820191906000526020600020905b81548152906001019060200180831161253857829003601f168201915b505050505086600001516126d4565b8015612605575061260581600101805461257d90613299565b80601f01602080910402602001604051908101604052809291908181526020018280546125a990613299565b80156125f65780601f106125cb576101008083540402835291602001916125f6565b820191906000526020600020905b8154815290600101906020018083116125d957829003601f168201915b505050505086602001516126d4565b80156126a657506126a681600201805461261e90613299565b80601f016020809104026020016040519081016040528092919081815260200182805461264a90613299565b80156126975780601f1061266c57610100808354040283529160200191612697565b820191906000526020600020905b81548152906001019060200180831161267a57829003601f168201915b505050505086604001516126d4565b80156126b9575060038101546060860151145b156126c9576001925050506122a9565b506000949350505050565b60006126df8261223a565b6126e88461223a565b149392505050565b8280546126fc90613299565b90600052602060002090601f01602090048101928261271e5760008555612764565b82601f1061273757805160ff1916838001178555612764565b82800160010185558215612764579182015b82811115612764578251825591602001919060010190612749565b506127709291506127b1565b5090565b6040805160e08101825260608082526020820181905291810182905260009181018290526080810182905260a0810182905260c081019190915290565b5b8082111561277057600081556001016127b2565b600082601f8301126127d757600080fd5b81356001600160401b03808211156127f1576127f161331b565b604051601f8301601f19908116603f011681019082821181831017156128195761281961331b565b8160405283815286602085880101111561283257600080fd5b836020870160208301376000602085830101528094505050505092915050565b60006020828403121561286457600080fd5b5051919050565b60006020828403121561287d57600080fd5b81356001600160401b0381111561289357600080fd5b6111d2848285016127c6565b600080604083850312156128b257600080fd5b82356001600160401b03808211156128c957600080fd5b6128d5868387016127c6565b935060208501359150808211156128eb57600080fd5b506128f8858286016127c6565b9150509250929050565b60008060006060848603121561291757600080fd5b83356001600160401b038082111561292e57600080fd5b61293a878388016127c6565b9450602086013591508082111561295057600080fd5b61295c878388016127c6565b9350604086013591508082111561297257600080fd5b5061297f868287016127c6565b9150509250925092565b6000806000806080858703121561299f57600080fd5b84356001600160401b03808211156129b657600080fd5b6129c2888389016127c6565b955060208701359150808211156129d857600080fd5b6129e4888389016127c6565b945060408701359150808211156129fa57600080fd5b612a06888389016127c6565b93506060870135915080821115612a1c57600080fd5b50612a29878288016127c6565b91505092959194509250565b600080600080600060a08688031215612a4d57600080fd5b85356001600160401b0380821115612a6457600080fd5b612a7089838a016127c6565b96506020880135915080821115612a8657600080fd5b612a9289838a016127c6565b95506040880135915080821115612aa857600080fd5b612ab489838a016127c6565b94506060880135915080821115612aca57600080fd5b612ad689838a016127c6565b93506080880135915080821115612aec57600080fd5b50612af9888289016127c6565b9150509295509295909350565b60008060008060008060c08789031215612b1f57600080fd5b86356001600160401b0380821115612b3657600080fd5b612b428a838b016127c6565b97506020890135915080821115612b5857600080fd5b612b648a838b016127c6565b96506040890135915080821115612b7a57600080fd5b612b868a838b016127c6565b95506060890135915080821115612b9c57600080fd5b612ba88a838b016127c6565b94506080890135915080821115612bbe57600080fd5b612bca8a838b016127c6565b935060a0890135915080821115612be057600080fd5b50612bed89828a016127c6565b9150509295509295509295565b60008060008060008060008060006101208a8c031215612c1957600080fd5b89356001600160401b0380821115612c3057600080fd5b612c3c8d838e016127c6565b9a5060208c0135915080821115612c5257600080fd5b612c5e8d838e016127c6565b995060408c0135915080821115612c7457600080fd5b612c808d838e016127c6565b985060608c0135915080821115612c9657600080fd5b612ca28d838e016127c6565b975060808c0135915080821115612cb857600080fd5b612cc48d838e016127c6565b965060a08c0135915080821115612cda57600080fd5b612ce68d838e016127c6565b955060c08c0135915080821115612cfc57600080fd5b612d088d838e016127c6565b945060e08c0135915080821115612d1e57600080fd5b50612d2b8c828d016127c6565b9250506101008a013590509295985092959850929598565b60008060008060808587031215612d5957600080fd5b84356001600160401b0380821115612d7057600080fd5b612d7c888389016127c6565b95506020870135915080821115612d9257600080fd5b612d9e888389016127c6565b94506040870135915080821115612db457600080fd5b50612dc1878288016127c6565b949793965093946060013593505050565b60008060008060008060008060008060006101608c8e031215612df457600080fd5b6001600160401b03808d351115612e0a57600080fd5b612e178e8e358f016127c6565b9b508060208e01351115612e2a57600080fd5b612e3a8e60208f01358f016127c6565b9a508060408e01351115612e4d57600080fd5b612e5d8e60408f01358f016127c6565b995060608d013598508060808e01351115612e7757600080fd5b612e878e60808f01358f016127c6565b97508060a08e01351115612e9a57600080fd5b612eaa8e60a08f01358f016127c6565b96508060c08e01351115612ebd57600080fd5b612ecd8e60c08f01358f016127c6565b95508060e08e01351115612ee057600080fd5b612ef08e60e08f01358f016127c6565b94506101008d01359350806101208e01351115612f0c57600080fd5b612f1d8e6101208f01358f016127c6565b9250806101408e01351115612f3157600080fd5b50612f438d6101408e01358e016127c6565b90509295989b509295989b9093969950565b60008151808452612f6d81602086016020860161326d565b601f01601f19169290920160200192915050565b6000815160e08452612f9660e0850182612f55565b905060208301518482036020860152612faf8282612f55565b91505060408301518482036040860152612fc98282612f55565b915050606083015160608501526080830151608085015260a0830151151560a085015260c0830151151560c08501528091505092915050565b6000825161301481846020870161326d565b9190910192915050565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b838110156130f257603f19898403018552815160c0815181865261306b82870182612f55565b915050888201518582038a8701526130838282612f55565b915050878201518582038987015261309b8282612f55565b9150506060808301518187015250608080830151868303828801526130c08382612f55565b9250505060a080830151925085820381870152506130de8183612f55565b968901969450505090860190600101613045565b509098975050505050505050565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b838110156130f257603f19898403018552815160e0815181865261314d82870182612f55565b915050888201518582038a8701526131658282612f55565b915050878201518582038987015261317d8282612f55565b9150506060808301518187015250608080830151868303828801526131a28382612f55565b60a0858101519089015260c09485015194909701939093525050509386019390860190600101613127565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561322257603f19888603018452613210858351612f81565b945092850192908501906001016131f4565b5092979650505050505050565b6020815260006105f56020830184612f55565b6020815260006105f56020830184612f81565b60008219821115613268576132686132ef565b500190565b60005b83811015613288578181015183820152602001613270565b83811115611ac95750506000910152565b600181811c908216806132ad57607f821691505b602082108114156132ce57634e487b7160e01b600052602260045260246000fd5b50919050565b60006000198214156132e8576132e86132ef565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fdfea26469706673582212209dc386ee361a41898c113068c60ebf7c9707d37a9e3b49cb1e8723427711a8b364736f6c63430008060033";

    public static final String FUNC_AUTHSUPERADMIN = "authSuperAdmin";

    public static final String FUNC_CREATECONSTITUENCYUSINGSUPERADMIN = "createConstituencyUsingSuperAdmin";

    public static final String FUNC_CREATEELECTIONUSINGSUPERADMIN = "createElectionUsingSuperAdmin";

    public static final String FUNC_DEFAULTSUPERADMIN = "defaultSuperAdmin";

    public static final String FUNC_EDITSUPERADMINALLDETAILS = "editSuperAdminAllDetails";

    public static final String FUNC_EDITSUPERADMINEMAILID = "editSuperAdminEmailId";

    public static final String FUNC_EDITSUPERADMINNAME = "editSuperAdminName";

    public static final String FUNC_EDITSUPERADMINPASSWORD = "editSuperAdminPassword";

    public static final String FUNC_FINALLYADDSUPERADMIN = "finallyAddSuperAdmin";

    public static final String FUNC_GETALLELECTIONDATA = "getAllElectionData";

    public static final String FUNC_GETALLSUPERADMINDETAILS = "getAllSuperAdminDetails";

    public static final String FUNC_GETCONSTITUENTDETAILS = "getConstituentDetails";

    public static final String FUNC_GETSUPERADMINDETAILS = "getSuperAdminDetails";

    public static final String FUNC_GETSUPERADMINLOGINLOG = "getSuperAdminLoginLog";

    public static final String FUNC_ISSUPERADMINADDED = "isSuperAdminAdded";

    public static final String FUNC_ISSUPERADMINUSERNAMETAKEN = "isSuperAdminUsernameTaken";

    public static final String FUNC_MODIFYSUPERADMINLOGINLOG = "modifySuperAdminLoginLog";

    @Deprecated
    protected __contracts_Election_sol_Election(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    protected __contracts_Election_sol_Election(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, credentials, contractGasProvider);
    }

    @Deprecated
    protected __contracts_Election_sol_Election(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    protected __contracts_Election_sol_Election(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public RemoteFunctionCall<Boolean> authSuperAdmin(String username, String encUsername, String password) {
        final Function function = new Function(FUNC_AUTHSUPERADMIN, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(username), 
                new org.web3j.abi.datatypes.Utf8String(encUsername), 
                new org.web3j.abi.datatypes.Utf8String(password)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteFunctionCall<TransactionReceipt> createConstituencyUsingSuperAdmin(String username, String encUsername, String password, BigInteger userElectionIndex, String constituencyId, String district, String state, String constituencyNumber, BigInteger numberOfVoters, String date, String time) {
        final Function function = new Function(
                FUNC_CREATECONSTITUENCYUSINGSUPERADMIN, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(username), 
                new org.web3j.abi.datatypes.Utf8String(encUsername), 
                new org.web3j.abi.datatypes.Utf8String(password), 
                new org.web3j.abi.datatypes.generated.Uint256(userElectionIndex), 
                new org.web3j.abi.datatypes.Utf8String(constituencyId), 
                new org.web3j.abi.datatypes.Utf8String(district), 
                new org.web3j.abi.datatypes.Utf8String(state), 
                new org.web3j.abi.datatypes.Utf8String(constituencyNumber), 
                new org.web3j.abi.datatypes.generated.Uint256(numberOfVoters), 
                new org.web3j.abi.datatypes.Utf8String(date), 
                new org.web3j.abi.datatypes.Utf8String(time)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> createElectionUsingSuperAdmin(String username, String encUsername, String password, String electionId, String electionAlias, String year, String typeOfElection, String date, BigInteger numberOfConstituency) {
        final Function function = new Function(
                FUNC_CREATEELECTIONUSINGSUPERADMIN, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(username), 
                new org.web3j.abi.datatypes.Utf8String(encUsername), 
                new org.web3j.abi.datatypes.Utf8String(password), 
                new org.web3j.abi.datatypes.Utf8String(electionId), 
                new org.web3j.abi.datatypes.Utf8String(electionAlias), 
                new org.web3j.abi.datatypes.Utf8String(year), 
                new org.web3j.abi.datatypes.Utf8String(typeOfElection), 
                new org.web3j.abi.datatypes.Utf8String(date), 
                new org.web3j.abi.datatypes.generated.Uint256(numberOfConstituency)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> defaultSuperAdmin(String name, String emailId, String username, String encUsername, String password) {
        final Function function = new Function(
                FUNC_DEFAULTSUPERADMIN, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(name), 
                new org.web3j.abi.datatypes.Utf8String(emailId), 
                new org.web3j.abi.datatypes.Utf8String(username), 
                new org.web3j.abi.datatypes.Utf8String(encUsername), 
                new org.web3j.abi.datatypes.Utf8String(password)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> editSuperAdminAllDetails(String name, String emailId, String encUsername, String password) {
        final Function function = new Function(
                FUNC_EDITSUPERADMINALLDETAILS, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(name), 
                new org.web3j.abi.datatypes.Utf8String(emailId), 
                new org.web3j.abi.datatypes.Utf8String(encUsername), 
                new org.web3j.abi.datatypes.Utf8String(password)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> editSuperAdminEmailId(String emailId, String encUsername) {
        final Function function = new Function(
                FUNC_EDITSUPERADMINEMAILID, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(emailId), 
                new org.web3j.abi.datatypes.Utf8String(encUsername)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> editSuperAdminName(String name, String encUsername) {
        final Function function = new Function(
                FUNC_EDITSUPERADMINNAME, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(name), 
                new org.web3j.abi.datatypes.Utf8String(encUsername)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> editSuperAdminPassword(String password, String encUsername) {
        final Function function = new Function(
                FUNC_EDITSUPERADMINPASSWORD, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(password), 
                new org.web3j.abi.datatypes.Utf8String(encUsername)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> finallyAddSuperAdmin(String name, String emailId, String username, String encUsername, String password, String adminUsername) {
        final Function function = new Function(
                FUNC_FINALLYADDSUPERADMIN, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(name), 
                new org.web3j.abi.datatypes.Utf8String(emailId), 
                new org.web3j.abi.datatypes.Utf8String(username), 
                new org.web3j.abi.datatypes.Utf8String(encUsername), 
                new org.web3j.abi.datatypes.Utf8String(password), 
                new org.web3j.abi.datatypes.Utf8String(adminUsername)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<List> getAllElectionData(String username, String encUsername, String password) {
        final Function function = new Function(FUNC_GETALLELECTIONDATA, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(username), 
                new org.web3j.abi.datatypes.Utf8String(encUsername), 
                new org.web3j.abi.datatypes.Utf8String(password)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<electionData>>() {}));
        return new RemoteFunctionCall<List>(function,
                new Callable<List>() {
                    @Override
                    @SuppressWarnings("unchecked")
                    public List call() throws Exception {
                        List<Type> result = (List<Type>) executeCallSingleValueReturn(function, List.class);
                        return convertToNative(result);
                    }
                });
    }

    public RemoteFunctionCall<List> getAllSuperAdminDetails(String encUsername) {
        final Function function = new Function(FUNC_GETALLSUPERADMINDETAILS, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(encUsername)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<superAdmin>>() {}));
        return new RemoteFunctionCall<List>(function,
                new Callable<List>() {
                    @Override
                    @SuppressWarnings("unchecked")
                    public List call() throws Exception {
                        List<Type> result = (List<Type>) executeCallSingleValueReturn(function, List.class);
                        return convertToNative(result);
                    }
                });
    }

    public RemoteFunctionCall<List> getConstituentDetails(String username, String encUsername, String password, BigInteger electionIndex) {
        final Function function = new Function(FUNC_GETCONSTITUENTDETAILS, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(username), 
                new org.web3j.abi.datatypes.Utf8String(encUsername), 
                new org.web3j.abi.datatypes.Utf8String(password), 
                new org.web3j.abi.datatypes.generated.Uint256(electionIndex)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<constituencyData>>() {}));
        return new RemoteFunctionCall<List>(function,
                new Callable<List>() {
                    @Override
                    @SuppressWarnings("unchecked")
                    public List call() throws Exception {
                        List<Type> result = (List<Type>) executeCallSingleValueReturn(function, List.class);
                        return convertToNative(result);
                    }
                });
    }

    public RemoteFunctionCall<superAdmin> getSuperAdminDetails(String encUsername) {
        final Function function = new Function(FUNC_GETSUPERADMINDETAILS, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(encUsername)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<superAdmin>() {}));
        return executeRemoteCallSingleValueReturn(function, superAdmin.class);
    }

    public RemoteFunctionCall<String> getSuperAdminLoginLog(String encUsername) {
        final Function function = new Function(FUNC_GETSUPERADMINLOGINLOG, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(encUsername)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteFunctionCall<BigInteger> isSuperAdminAdded(String name, String emailId, String username, String encUsername, String password) {
        final Function function = new Function(FUNC_ISSUPERADMINADDED, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(name), 
                new org.web3j.abi.datatypes.Utf8String(emailId), 
                new org.web3j.abi.datatypes.Utf8String(username), 
                new org.web3j.abi.datatypes.Utf8String(encUsername), 
                new org.web3j.abi.datatypes.Utf8String(password)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<Boolean> isSuperAdminUsernameTaken(String encUsername) {
        final Function function = new Function(FUNC_ISSUPERADMINUSERNAMETAKEN, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(encUsername)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteFunctionCall<TransactionReceipt> modifySuperAdminLoginLog(String encUsername, String dateTime) {
        final Function function = new Function(
                FUNC_MODIFYSUPERADMINLOGINLOG, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(encUsername), 
                new org.web3j.abi.datatypes.Utf8String(dateTime)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    @Deprecated
    public static __contracts_Election_sol_Election load(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return new __contracts_Election_sol_Election(contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    @Deprecated
    public static __contracts_Election_sol_Election load(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return new __contracts_Election_sol_Election(contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    public static __contracts_Election_sol_Election load(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return new __contracts_Election_sol_Election(contractAddress, web3j, credentials, contractGasProvider);
    }

    public static __contracts_Election_sol_Election load(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return new __contracts_Election_sol_Election(contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public static RemoteCall<__contracts_Election_sol_Election> deploy(Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(__contracts_Election_sol_Election.class, web3j, credentials, contractGasProvider, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<__contracts_Election_sol_Election> deploy(Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(__contracts_Election_sol_Election.class, web3j, credentials, gasPrice, gasLimit, BINARY, "");
    }

    public static RemoteCall<__contracts_Election_sol_Election> deploy(Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(__contracts_Election_sol_Election.class, web3j, transactionManager, contractGasProvider, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<__contracts_Election_sol_Election> deploy(Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(__contracts_Election_sol_Election.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, "");
    }

    public static class superAdmin extends DynamicStruct {
        public String name;

        public String emailId;

        public String username;

        public byte[] encUsername;

        public byte[] password;

        public Boolean occupied;

        public Boolean canDelete;

        public superAdmin(String name, String emailId, String username, byte[] encUsername, byte[] password, Boolean occupied, Boolean canDelete) {
            super(new org.web3j.abi.datatypes.Utf8String(name),new org.web3j.abi.datatypes.Utf8String(emailId),new org.web3j.abi.datatypes.Utf8String(username),new org.web3j.abi.datatypes.generated.Bytes32(encUsername),new org.web3j.abi.datatypes.generated.Bytes32(password),new org.web3j.abi.datatypes.Bool(occupied),new org.web3j.abi.datatypes.Bool(canDelete));
            this.name = name;
            this.emailId = emailId;
            this.username = username;
            this.encUsername = encUsername;
            this.password = password;
            this.occupied = occupied;
            this.canDelete = canDelete;
        }

        public superAdmin(Utf8String name, Utf8String emailId, Utf8String username, Bytes32 encUsername, Bytes32 password, Bool occupied, Bool canDelete) {
            super(name,emailId,username,encUsername,password,occupied,canDelete);
            this.name = name.getValue();
            this.emailId = emailId.getValue();
            this.username = username.getValue();
            this.encUsername = encUsername.getValue();
            this.password = password.getValue();
            this.occupied = occupied.getValue();
            this.canDelete = canDelete.getValue();
        }
    }
}
