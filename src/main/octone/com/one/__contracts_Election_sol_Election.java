package com.one;

import java.math.BigInteger;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.concurrent.Callable;
import org.web3j.abi.TypeReference;
import org.web3j.abi.datatypes.Bool;
import org.web3j.abi.datatypes.DynamicArray;
import org.web3j.abi.datatypes.DynamicStruct;
import org.web3j.abi.datatypes.Function;
import org.web3j.abi.datatypes.Type;
import org.web3j.abi.datatypes.Utf8String;
import org.web3j.abi.datatypes.generated.Bytes32;
import org.web3j.abi.datatypes.generated.Int256;
import org.web3j.crypto.Credentials;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.RemoteCall;
import org.web3j.protocol.core.RemoteFunctionCall;
import org.web3j.protocol.core.methods.response.TransactionReceipt;
import org.web3j.tx.Contract;
import org.web3j.tx.TransactionManager;
import org.web3j.tx.gas.ContractGasProvider;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>,
 * or the org.web3j.codegen.SolidityFunctionWrapperGenerator in the 
 * <a href="https://github.com/web3j/web3j/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with web3j version 1.4.1.
 */
@SuppressWarnings("rawtypes")
public class __contracts_Election_sol_Election extends Contract {
    public static final String BINARY = "";

    public static final String FUNC_ADDCONSTITUENCYDATA = "addConstituencyData";

    public static final String FUNC_AUTHSUPERADMIN = "authSuperAdmin";

    public static final String FUNC_CREATECONSTITUENCYUSINGSUPERADMIN = "createConstituencyUsingSuperAdmin";

    public static final String FUNC_CREATEELECTIONUSINGSUPERADMIN = "createElectionUsingSuperAdmin";

    public static final String FUNC_DEFAULTSUPERADMIN = "defaultSuperAdmin";

    public static final String FUNC_EDITSUPERADMINALLDETAILS = "editSuperAdminAllDetails";

    public static final String FUNC_EDITSUPERADMINEMAILID = "editSuperAdminEmailId";

    public static final String FUNC_EDITSUPERADMINNAME = "editSuperAdminName";

    public static final String FUNC_EDITSUPERADMINPASSWORD = "editSuperAdminPassword";

    public static final String FUNC_FINALLYADDSUPERADMIN = "finallyAddSuperAdmin";

    public static final String FUNC_GETALLELECTIONDATA = "getAllElectionData";

    public static final String FUNC_GETALLSUPERADMINDETAILS = "getAllSuperAdminDetails";

    public static final String FUNC_GETCONSTITUENTDETAILS = "getConstituentDetails";

    public static final String FUNC_GETCORRESSPONDINGSTATELIST = "getCorresspondingStateList";

    public static final String FUNC_GETSTATELIST = "getStateList";

    public static final String FUNC_GETSUPERADMINDETAILS = "getSuperAdminDetails";

    public static final String FUNC_GETSUPERADMINLOGINLOG = "getSuperAdminLoginLog";

    public static final String FUNC_ISSUPERADMINADDED = "isSuperAdminAdded";

    public static final String FUNC_ISSUPERADMINUSERNAMETAKEN = "isSuperAdminUsernameTaken";

    public static final String FUNC_MODIFYSUPERADMINLOGINLOG = "modifySuperAdminLoginLog";

    @Deprecated
    protected __contracts_Election_sol_Election(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    protected __contracts_Election_sol_Election(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, credentials, contractGasProvider);
    }

    @Deprecated
    protected __contracts_Election_sol_Election(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    protected __contracts_Election_sol_Election(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public RemoteFunctionCall<TransactionReceipt> addConstituencyData(String username, String encUsername, String password, String stateId, String stateName, String constituencyId, String district, String constitutionName, String taluk) {
        final Function function = new Function(
                FUNC_ADDCONSTITUENCYDATA, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(username), 
                new org.web3j.abi.datatypes.Utf8String(encUsername), 
                new org.web3j.abi.datatypes.Utf8String(password), 
                new org.web3j.abi.datatypes.Utf8String(stateId), 
                new org.web3j.abi.datatypes.Utf8String(stateName), 
                new org.web3j.abi.datatypes.Utf8String(constituencyId), 
                new org.web3j.abi.datatypes.Utf8String(district), 
                new org.web3j.abi.datatypes.Utf8String(constitutionName), 
                new org.web3j.abi.datatypes.Utf8String(taluk)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<Boolean> authSuperAdmin(String username, String encUsername, String password) {
        final Function function = new Function(FUNC_AUTHSUPERADMIN, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(username), 
                new org.web3j.abi.datatypes.Utf8String(encUsername), 
                new org.web3j.abi.datatypes.Utf8String(password)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteFunctionCall<TransactionReceipt> createConstituencyUsingSuperAdmin(String username, String encUsername, String password, BigInteger userElectionIndex, String constituencyId, String district, String state, String constituencyNumber, BigInteger numberOfVoters, String date, String time) {
        final Function function = new Function(
                FUNC_CREATECONSTITUENCYUSINGSUPERADMIN, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(username), 
                new org.web3j.abi.datatypes.Utf8String(encUsername), 
                new org.web3j.abi.datatypes.Utf8String(password), 
                new org.web3j.abi.datatypes.generated.Uint256(userElectionIndex), 
                new org.web3j.abi.datatypes.Utf8String(constituencyId), 
                new org.web3j.abi.datatypes.Utf8String(district), 
                new org.web3j.abi.datatypes.Utf8String(state), 
                new org.web3j.abi.datatypes.Utf8String(constituencyNumber), 
                new org.web3j.abi.datatypes.generated.Uint256(numberOfVoters), 
                new org.web3j.abi.datatypes.Utf8String(date), 
                new org.web3j.abi.datatypes.Utf8String(time)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> createElectionUsingSuperAdmin(String username, String encUsername, String password, String electionId, String electionAlias, String year, String typeOfElection, String date, BigInteger numberOfConstituency) {
        final Function function = new Function(
                FUNC_CREATEELECTIONUSINGSUPERADMIN, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(username), 
                new org.web3j.abi.datatypes.Utf8String(encUsername), 
                new org.web3j.abi.datatypes.Utf8String(password), 
                new org.web3j.abi.datatypes.Utf8String(electionId), 
                new org.web3j.abi.datatypes.Utf8String(electionAlias), 
                new org.web3j.abi.datatypes.Utf8String(year), 
                new org.web3j.abi.datatypes.Utf8String(typeOfElection), 
                new org.web3j.abi.datatypes.Utf8String(date), 
                new org.web3j.abi.datatypes.generated.Uint256(numberOfConstituency)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> defaultSuperAdmin(String name, String emailId, String username, String encUsername, String password) {
        final Function function = new Function(
                FUNC_DEFAULTSUPERADMIN, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(name), 
                new org.web3j.abi.datatypes.Utf8String(emailId), 
                new org.web3j.abi.datatypes.Utf8String(username), 
                new org.web3j.abi.datatypes.Utf8String(encUsername), 
                new org.web3j.abi.datatypes.Utf8String(password)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> editSuperAdminAllDetails(String name, String emailId, String encUsername, String password) {
        final Function function = new Function(
                FUNC_EDITSUPERADMINALLDETAILS, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(name), 
                new org.web3j.abi.datatypes.Utf8String(emailId), 
                new org.web3j.abi.datatypes.Utf8String(encUsername), 
                new org.web3j.abi.datatypes.Utf8String(password)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> editSuperAdminEmailId(String emailId, String encUsername) {
        final Function function = new Function(
                FUNC_EDITSUPERADMINEMAILID, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(emailId), 
                new org.web3j.abi.datatypes.Utf8String(encUsername)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> editSuperAdminName(String name, String encUsername) {
        final Function function = new Function(
                FUNC_EDITSUPERADMINNAME, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(name), 
                new org.web3j.abi.datatypes.Utf8String(encUsername)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> editSuperAdminPassword(String password, String encUsername) {
        final Function function = new Function(
                FUNC_EDITSUPERADMINPASSWORD, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(password), 
                new org.web3j.abi.datatypes.Utf8String(encUsername)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> finallyAddSuperAdmin(String name, String emailId, String username, String encUsername, String password, String adminUsername) {
        final Function function = new Function(
                FUNC_FINALLYADDSUPERADMIN, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(name), 
                new org.web3j.abi.datatypes.Utf8String(emailId), 
                new org.web3j.abi.datatypes.Utf8String(username), 
                new org.web3j.abi.datatypes.Utf8String(encUsername), 
                new org.web3j.abi.datatypes.Utf8String(password), 
                new org.web3j.abi.datatypes.Utf8String(adminUsername)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<List> getAllElectionData(String username, String encUsername, String password) {
        final Function function = new Function(FUNC_GETALLELECTIONDATA, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(username), 
                new org.web3j.abi.datatypes.Utf8String(encUsername), 
                new org.web3j.abi.datatypes.Utf8String(password)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<electionData>>() {}));
        return new RemoteFunctionCall<List>(function,
                new Callable<List>() {
                    @Override
                    @SuppressWarnings("unchecked")
                    public List call() throws Exception {
                        List<Type> result = (List<Type>) executeCallSingleValueReturn(function, List.class);
                        return convertToNative(result);
                    }
                });
    }

    public RemoteFunctionCall<List> getAllSuperAdminDetails(String encUsername) {
        final Function function = new Function(FUNC_GETALLSUPERADMINDETAILS, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(encUsername)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<superAdmin>>() {}));
        return new RemoteFunctionCall<List>(function,
                new Callable<List>() {
                    @Override
                    @SuppressWarnings("unchecked")
                    public List call() throws Exception {
                        List<Type> result = (List<Type>) executeCallSingleValueReturn(function, List.class);
                        return convertToNative(result);
                    }
                });
    }

    public RemoteFunctionCall<List> getConstituentDetails(String username, String encUsername, String password, BigInteger electionIndex) {
        final Function function = new Function(FUNC_GETCONSTITUENTDETAILS, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(username), 
                new org.web3j.abi.datatypes.Utf8String(encUsername), 
                new org.web3j.abi.datatypes.Utf8String(password), 
                new org.web3j.abi.datatypes.generated.Uint256(electionIndex)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<constituencyData>>() {}));
        return new RemoteFunctionCall<List>(function,
                new Callable<List>() {
                    @Override
                    @SuppressWarnings("unchecked")
                    public List call() throws Exception {
                        List<Type> result = (List<Type>) executeCallSingleValueReturn(function, List.class);
                        return convertToNative(result);
                    }
                });
    }

    public RemoteFunctionCall<List> getCorresspondingStateList(String username, String encUsername, String password, BigInteger index) {
        final Function function = new Function(FUNC_GETCORRESSPONDINGSTATELIST, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(username), 
                new org.web3j.abi.datatypes.Utf8String(encUsername), 
                new org.web3j.abi.datatypes.Utf8String(password), 
                new org.web3j.abi.datatypes.generated.Uint256(index)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<stateDetails>>() {}));
        return new RemoteFunctionCall<List>(function,
                new Callable<List>() {
                    @Override
                    @SuppressWarnings("unchecked")
                    public List call() throws Exception {
                        List<Type> result = (List<Type>) executeCallSingleValueReturn(function, List.class);
                        return convertToNative(result);
                    }
                });
    }

    public RemoteFunctionCall<List> getStateList(String username, String encUsername, String password) {
        final Function function = new Function(FUNC_GETSTATELIST, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(username), 
                new org.web3j.abi.datatypes.Utf8String(encUsername), 
                new org.web3j.abi.datatypes.Utf8String(password)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<stateInfo>>() {}));
        return new RemoteFunctionCall<List>(function,
                new Callable<List>() {
                    @Override
                    @SuppressWarnings("unchecked")
                    public List call() throws Exception {
                        List<Type> result = (List<Type>) executeCallSingleValueReturn(function, List.class);
                        return convertToNative(result);
                    }
                });
    }

    public RemoteFunctionCall<superAdmin> getSuperAdminDetails(String encUsername) {
        final Function function = new Function(FUNC_GETSUPERADMINDETAILS, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(encUsername)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<superAdmin>() {}));
        return executeRemoteCallSingleValueReturn(function, superAdmin.class);
    }

    public RemoteFunctionCall<String> getSuperAdminLoginLog(String encUsername) {
        final Function function = new Function(FUNC_GETSUPERADMINLOGINLOG, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(encUsername)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteFunctionCall<BigInteger> isSuperAdminAdded(String name, String emailId, String username, String encUsername, String password) {
        final Function function = new Function(FUNC_ISSUPERADMINADDED, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(name), 
                new org.web3j.abi.datatypes.Utf8String(emailId), 
                new org.web3j.abi.datatypes.Utf8String(username), 
                new org.web3j.abi.datatypes.Utf8String(encUsername), 
                new org.web3j.abi.datatypes.Utf8String(password)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<Boolean> isSuperAdminUsernameTaken(String encUsername) {
        final Function function = new Function(FUNC_ISSUPERADMINUSERNAMETAKEN, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(encUsername)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteFunctionCall<TransactionReceipt> modifySuperAdminLoginLog(String encUsername, String dateTime) {
        final Function function = new Function(
                FUNC_MODIFYSUPERADMINLOGINLOG, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(encUsername), 
                new org.web3j.abi.datatypes.Utf8String(dateTime)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    @Deprecated
    public static __contracts_Election_sol_Election load(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return new __contracts_Election_sol_Election(contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    @Deprecated
    public static __contracts_Election_sol_Election load(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return new __contracts_Election_sol_Election(contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    public static __contracts_Election_sol_Election load(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return new __contracts_Election_sol_Election(contractAddress, web3j, credentials, contractGasProvider);
    }

    public static __contracts_Election_sol_Election load(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return new __contracts_Election_sol_Election(contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public static RemoteCall<__contracts_Election_sol_Election> deploy(Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(__contracts_Election_sol_Election.class, web3j, credentials, contractGasProvider, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<__contracts_Election_sol_Election> deploy(Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(__contracts_Election_sol_Election.class, web3j, credentials, gasPrice, gasLimit, BINARY, "");
    }

    public static RemoteCall<__contracts_Election_sol_Election> deploy(Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(__contracts_Election_sol_Election.class, web3j, transactionManager, contractGasProvider, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<__contracts_Election_sol_Election> deploy(Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(__contracts_Election_sol_Election.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, "");
    }

    public static class superAdmin extends DynamicStruct {
        public String name;

        public String emailId;

        public String username;

        public byte[] encUsername;

        public byte[] password;

        public Boolean occupied;

        public Boolean canDelete;

        public superAdmin(String name, String emailId, String username, byte[] encUsername, byte[] password, Boolean occupied, Boolean canDelete) {
            super(new org.web3j.abi.datatypes.Utf8String(name),new org.web3j.abi.datatypes.Utf8String(emailId),new org.web3j.abi.datatypes.Utf8String(username),new org.web3j.abi.datatypes.generated.Bytes32(encUsername),new org.web3j.abi.datatypes.generated.Bytes32(password),new org.web3j.abi.datatypes.Bool(occupied),new org.web3j.abi.datatypes.Bool(canDelete));
            this.name = name;
            this.emailId = emailId;
            this.username = username;
            this.encUsername = encUsername;
            this.password = password;
            this.occupied = occupied;
            this.canDelete = canDelete;
        }

        public superAdmin(Utf8String name, Utf8String emailId, Utf8String username, Bytes32 encUsername, Bytes32 password, Bool occupied, Bool canDelete) {
            super(name,emailId,username,encUsername,password,occupied,canDelete);
            this.name = name.getValue();
            this.emailId = emailId.getValue();
            this.username = username.getValue();
            this.encUsername = encUsername.getValue();
            this.password = password.getValue();
            this.occupied = occupied.getValue();
            this.canDelete = canDelete.getValue();
        }
    }
}
